{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"set",
				"set_random_probabilities"
			],
			[
				"max",
				"maxnumber\tparam"
			],
			[
				"x",
				"x\tstatement"
			],
			[
				"p",
				"probalilities\tstatement"
			],
			[
				"v",
				"valuenumber\tstatement"
			],
			[
				"Sa",
				"Sample_from_distribution（"
			],
			[
				"Co",
				"ConstError"
			]
		]
	},
	"buffers":
	[
		{
			"file": "classes/all_distribution_parameter.py",
			"settings":
			{
				"buffer_size": 532,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "blackboard.py",
			"settings":
			{
				"buffer_size": 564,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "RenderNvisualization/Character_draw.py",
			"settings":
			{
				"buffer_size": 389,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "RenderNvisualization/Substrokes_draw.py",
			"settings":
			{
				"buffer_size": 391,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "# -*- coding: utf-8 -*-\n# @Poroject Name: HLCL\n# @File Name: Sample_from_distribution.py\n# @Author: Yang Zhao\n# @Emial: frostwoods@foxmail.com\n# @Date:   2017-10-22 19:21:58\n# @Last Modified by:   Yang Zhao\n# @Last Modified time: 2017-10-27 00:10:27\n\"\"\"\nDescripition:\n    Sample from a given distribution\n\n    Input: \n         distribution type:{\n                \n\n\n\n\n            }   \n         parameter 什么数据格式能兼容？\n    \n\n    Output：\n         a sample\nUsage:\n\n\n\nChange Activity:\n10.25 mutinomial finished, add markov , gassuian , gamma\n    \n\nComment:\n    hard work ahh\n    定义一个分布的类：自由的增加分布种类\n    输入数据类型：整合的参数输入方式\n\n    目前需要包含的分布\n        多项式分布 √\n        高斯分布\n        马尔科夫过程\n        伽马分布 \n\n\"\"\"\nimport numpy as np\nfrom scipy.stats import multinomial, dirichlet, gamma, multivariate_normal\n\n\nclass Sample_Multinomial():\n    \"\"\"Multinomial distribution for kappa\"\"\"\n\n    def __init__(self, p = None):\n        self.valuenumber = None\n        self.probabilities = None\n        if p is None:\n            self.set_max_numbers()\n            self.set_random_probabilities()\n        else:\n            self.probabilities = p\n            self.valuenumber = len(p)\n\n        self.temporary_sample = None\n\n\n    def set_max_numbers(self, maxnumber=None):\n        if maxnumber is None:\n            self.valuenumber = np.random.randint(1, 10)\n        else:\n            self.valuenumber = maxnumber\n\n\n    def set_random_probabilities(self):\n        prior = np.random.randint(1, 10, self.valuenumber)\n        self.probabilities = dirichlet.rvs(prior)[0]\n\n\n    def learn_distribution(self,data = None):\n        # learn probabilities\n        pass\n\n    def sample_from_multinomial(self, sampletimes=1):\n        if self.valuenumber is None:\n            self.set_random_numbers()\n            self.set_random_probabilities()\n\n        sample = np.zeros(sampletimes)\n\n        for x in xrange(0, sampletimes):\n            One_sample = multinomial.rvs(1, self.probabilities)\n            sample[x] = np.where(One_sample == 1)[0] + 1\n\n        self.temporary_sample = sample\n\n\n\n\nclass Markov_Martrix():\n    \"\"\"first-order Markov Processe\"\"\"\n    #multivariate_normal\n\n\n    def __init__(self):\n        pass\n\n    def Set_parameter():\n        pass\n\n    def Learn_parameter():\n        pass\n\n    def sample():\n        pass\n\n        \nclass Multi_Gaussian():\n    \"\"\"控制点取样\"\"\"\n    #inverse wishart\n    def __init__(self, arg):\n        pass\n    def Set_parameter():\n        pass\n\n    def Learn_parameter():\n        pass\n    def sample():\n        pass\n\nclass Gamma():\n    \"\"\"docstring for ClassName\"\"\"\n    def __init__(self):\n        pass\n    def Set_parameter():\n        pass\n\n    def Learn_parameter():\n        pass\n    def sample():\n        pass\n        self.arg = arg\n        \n\n        \nclass Dirac(object):\n    \"\"\"docstring for ClassName\"\"\"\n    #狄拉克δ函数_ \n    def __init__(self, arg):\n        pass\n\n\n\n\n        \n\n\n\n\n\ndef main():\n    # test funcion\n    test = Sample_Multinomial()\n    test.sample_from_multinomial(5)\n    print test.temporary_sample\n\n\nif __name__ == \"__main__\":\n    main()\n",
			"file": "Unassigned/Sample_from_distribution.py",
			"file_size": 3839,
			"file_write_time": 131535078297688524,
			"settings":
			{
				"buffer_size": 3042,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Generative model/Generate_Relation.py",
			"settings":
			{
				"buffer_size": 764,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "Package Control: i",
		"selected_items":
		[
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: I",
				"Package Control: Install Package"
			],
			[
				"Package Control: Ins",
				"Package Control: Install Package"
			],
			[
				"Package Insat",
				"Package Control: Install Package"
			]
		],
		"width": 565.0
	},
	"console":
	{
		"height": 171.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Code/HLCL",
		"/F/Code/HLCL/classes",
		"/F/Code/HLCL/Generative model",
		"/F/Code/HLCL/Inference",
		"/F/Code/HLCL/RenderNvisualization",
		"/F/Code/HLCL/Unassigned"
	],
	"file_history":
	[
		"/F/Code/Demo by ty/generate_real_v1.0.py",
		"/F/Code/HLCL/Unassigned/Sample_from_distribution.py",
		"/F/Code/HLCL/classes/all_distribution_parameter.py",
		"/F/Code/HLCL/Generate_Token.py",
		"/F/Code/HLCL/blackboard.py",
		"/F/Code/HLCL/Gernerate_Type.py",
		"/F/Code/HLCL/Render/Character_draw.py",
		"/F/Code/HLCL/Render/Substrokes_draw.py",
		"/F/Code/HLCL/Generative model/Gernerate_Type.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/Anaconda/README.md",
		"/F/Code/HLCL/.gitignore",
		"/F/Code/HLCL/Sample_from_distribution.py",
		"/F/Code/HLCL/Darw_char_given_parameter.py",
		"/F/Code/HLCL/Sample_from_disturbition.py",
		"/F/Code/HLCL/const.py",
		"/C/Users/Yang Zhao/Desktop/爬虫/test0.py",
		"/F/Code/HLCL/constsavertest.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/FileHeader.sublime-settings",
		"/F/Scrapy/quotes/quotes_spider.py",
		"/F/Code/omniglot-master/omniglot-master/omniglot/one-shot-classification/demo_classification.py",
		"/F/Code/HLCL/Gernerate_parameters.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/personal header/Python.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/body/Python.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/header/Matlab.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/header/JavaScript.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/header/PHP.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/header/Python.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/SublimeTmpl/templates/python.tmpl",
		"/F/Code/HLCL/test.m",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/FileHeader/template/header/R.tmpl",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/User/FileHeader.sublime-settings",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/C/Python27/Lib/site-packages/sitecustomize.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/Default (Windows).sublime-keymap",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Default (Windows).sublime-keymap",
		"/F/Code/SoftMax.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/F/Code/RAM/Type1/RAM-master/ram.py",
		"/C/Users/Yang Zhao/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"probalilities"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"probabilities"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "classes/all_distribution_parameter.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 532,
						"regions":
						{
						},
						"selection":
						[
							[
								352,
								352
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								25,
								20,
								36,
								33,
								3,
								184,
								169,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "blackboard.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 564,
						"regions":
						{
						},
						"selection":
						[
							[
								564,
								564
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								23,
								19,
								8,
								28,
								5,
								43,
								112,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 248.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "RenderNvisualization/Character_draw.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 389,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								26,
								18,
								18,
								57,
								3,
								8,
								12,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "RenderNvisualization/Substrokes_draw.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 391,
						"regions":
						{
						},
						"selection":
						[
							[
								365,
								365
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								26,
								18,
								33,
								29,
								12,
								93,
								75,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Unassigned/Sample_from_distribution.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3042,
						"regions":
						{
						},
						"selection":
						[
							[
								2866,
								2866
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								22,
								19,
								21,
								58,
								14,
								191,
								147,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2322.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Generative model/Generate_Relation.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 764,
						"regions":
						{
						},
						"selection":
						[
							[
								356,
								356
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								225,
								10,
								27,
								0,
								11,
								48,
								1,
								21,
								33,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"open_with_edit": true,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 36.0,
						"translation.y": 65.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.457958811889,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 34.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 124.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "HLCL.sublime-project",
	"replace":
	{
		"height": 53.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 306.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
